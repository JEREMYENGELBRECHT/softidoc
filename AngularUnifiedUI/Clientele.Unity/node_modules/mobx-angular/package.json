{
  "_args": [
    [
      {
        "raw": "mobx-angular@^1.5.0",
        "scope": null,
        "escapedName": "mobx-angular",
        "name": "mobx-angular",
        "rawSpec": "^1.5.0",
        "spec": ">=1.5.0 <2.0.0",
        "type": "range"
      },
      "C:\\Development\\SoftiDoc\\AngularUnifiedUI\\Clientele.Unity\\node_modules\\angular-tree-component"
    ]
  ],
  "_from": "mobx-angular@>=1.5.0 <2.0.0",
  "_id": "mobx-angular@1.5.0",
  "_inCache": true,
  "_location": "/mobx-angular",
  "_nodeVersion": "7.6.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/mobx-angular-1.5.0.tgz_1492609319107_0.6241698369849473"
  },
  "_npmUser": {
    "name": "500tech",
    "email": "info@500tech.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mobx-angular@^1.5.0",
    "scope": null,
    "escapedName": "mobx-angular",
    "name": "mobx-angular",
    "rawSpec": "^1.5.0",
    "spec": ">=1.5.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/angular-tree-component"
  ],
  "_resolved": "https://registry.npmjs.org/mobx-angular/-/mobx-angular-1.5.0.tgz",
  "_shasum": "6c806483ebf7d161e5b5f5048edc300f8521c80c",
  "_shrinkwrap": null,
  "_spec": "mobx-angular@^1.5.0",
  "_where": "C:\\Development\\SoftiDoc\\AngularUnifiedUI\\Clientele.Unity\\node_modules\\angular-tree-component",
  "author": {
    "name": "Adam Klein",
    "email": "adam@500tech.com"
  },
  "bugs": {
    "url": "https://github.com/mobxjs/mobx-angular/issues"
  },
  "dependencies": {},
  "description": "Angular connector to MobX (2 and above)",
  "devDependencies": {
    "@angular/common": "^4.0.0",
    "@angular/compiler": "^4.0.0",
    "@angular/compiler-cli": "^4.0.0",
    "@angular/core": "^4.0.0",
    "@angular/platform-browser": "^4.0.0",
    "@angular/platform-browser-dynamic": "^4.0.0",
    "@types/jasmine": "2.5.37",
    "angular-cli": "1.0.0-beta.19-3",
    "codelyzer": "2.0.0-beta.4",
    "core-js": "^2.4.1",
    "jasmine-core": "2.5.2",
    "karma": "1.2.0",
    "karma-chrome-launcher": "2.0.0",
    "karma-cli": "1.0.1",
    "karma-jasmine": "1.0.2",
    "karma-typescript": "3.0.0-beta.2",
    "mobx": ">2.7.0",
    "rimraf": "2.5.4",
    "rollup": "0.41.4",
    "rollup-plugin-node-resolve": "2.0.0",
    "rxjs": "^5.0.1",
    "ts-helpers": "1.1.1",
    "tslint": "4.4.2",
    "typescript": "^2.2.1",
    "zone.js": "^0.7.4"
  },
  "directories": {},
  "dist": {
    "shasum": "6c806483ebf7d161e5b5f5048edc300f8521c80c",
    "tarball": "https://registry.npmjs.org/mobx-angular/-/mobx-angular-1.5.0.tgz"
  },
  "files": [
    "dist/"
  ],
  "gitHead": "5dcf20f73b73b89e7202f2e5aa859f727faeeb00",
  "homepage": "https://github.com/mobxjs/mobx-angular#readme",
  "jsnext:main": "dist/mobx-angular.js",
  "keywords": [
    "mobx",
    "angular2",
    "ng2",
    "angular",
    "ng2-mobx",
    "angular-mobx",
    "angular2-mobx",
    "mobx-angular",
    "mobx-angular2",
    "mobx-ng2",
    "state management",
    "mobxjs"
  ],
  "license": "MIT",
  "main": "dist/mobx-angular.umd.js",
  "maintainers": [
    {
      "name": "500tech",
      "email": "info@500tech.com"
    }
  ],
  "module": "dist/mobx-angular.js",
  "name": "mobx-angular",
  "optionalDependencies": {},
  "peerDependencies": {
    "mobx": ">2.7.0",
    "@angular/core": ">=2.3.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/mobxjs/mobx-angular.svg?branch=master)](https://travis-ci.org/mobxjs/mobx-angular)\n[![npm version](https://badge.fury.io/js/mobx-angular.svg)](https://badge.fury.io/js/mobx-angular)\n# mobx-angular\n\n## MobX connector for Angular (> 2)\nIf you're looking for the Angular 1 version version, it's [here](https://github.com/NgMobx/ng1-mobx)\n\n## Features\n1. The library allows you to automatically observe all the observables that your component uses\n2. Automatically runs change detection - works with OnPush strategy\n3. Disposes of all the observers when the component is destroyed\n4. Debugging tools\n\n## Usage\n\nInstall:\n```\n$ npm install --save mobx-angular\n```\n\nImport the MobxAngularModule:\n```ts\nimport { MobxAngularModule } from 'mobx-angular';\n\n@NgModule({\n    imports: [..., MobxAngularModule]\n})\nexport class MyModule {}\n```\n\n## autorun\nUse `*mobxAutorun` directive in your template:\n```ts\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport {store} from './store/counter';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *mobxAutorun>\n      {{ store.value }} - {{ store.computedValue }}\n      <button (click)=\"store.action\">Action</button>\n    </div>\n  `\n})\nexport class AppComponent {\n    store = store;\n}\n```\n\nThe directive will observe all the observables that your component uses, and will automatically run the change detection whenever there's a change.\n\nUse it together with onPush to gain maximum performance.\n\n## autorunSync\nThe same as autorun, except it runs synchronously.\n\n## reaction\nAside from autorun, MobX allows you to react to specific data changes.\n\nUsage:\n```ts\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div *mobxReaction=\"getParity.bind(this)\">\n    {{ parity }}\n  </div>`\n})\nclass AppComponent {\n  getParity() {\n    return this.parity = store.counter % 2 ? 'Odd' : 'Even';\n  }\n}\n```\nThe `callback` function will automatically re-run whenever any observable that it uses changes.\nChange Detection will run automatically whenever the return value of `callback` changes.\nIf you don't return anything, change detection will not run.\n\nIn this example, the `parity` property will be updated according to `counter`,\nand change detection will run only when the `parity` changes.\n\n## Injectable stores\nYou can easily make your stores injectable:\n```ts\nimport { observable, action } from 'mobx-angular';\n\n@Injectable()\nclass Store {\n  @observable value;\n  @action doSomething() { ... }\n}\n```\n\n## Debugging MobX\nmobx-angular comes with a handy debug tool.\nTo turn on / off the debug tool, open developer tools' console, and run:\n```ts\nMobxAngularDebug(true) // turn on\nMobxAngularDebug(false) // turn off\n```\nThen you can hover over the components that use mobx directives, and you will have a small box to click on to console.log the dependencies of that component.\nAlso, every action that happens in mobx will be console.logged in a nice way.\n\n## Examples\nSee the `example` folder, specifically these files:  \n`/example/todos/src/app/stores/todos.ts`  \n`/example/todos/src/app/app.component.ts`\n\nTo run the examples, clone this repo and run:\n```\n$ npm install -g @angular/cli\n$ cd example/<example-folder>\n$ npm install\n$ ng serve\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mobxjs/mobx-angular.git"
  },
  "scripts": {
    "build": "npm run lint && npm run clean && ngc && npm run rollup",
    "clean": "rimraf dist",
    "lint": "tslint lib/**/*.ts",
    "prepublish": "npm run build && npm run test",
    "rollup": "rollup -c rollup.config.js dist/mobx-angular.js > dist/mobx-angular.umd.js",
    "tdd": "karma start",
    "test": "karma start --single-run"
  },
  "typings": "dist/mobx-angular.d.ts",
  "version": "1.5.0"
}
